"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const winston_1 = __importStar(require("winston"));
const util_1 = require("util");
const chalk_1 = __importDefault(require("chalk"));
const gradient = require("gradient-string");
chalk_1.default.level = 1;
let logger;
function getLogger(level) {
    if (!logger) {
        logger = winston_1.default.createLogger({
            level: level || "info",
            format: winston_1.format.combine(winston_1.format.cli(), winston_1.format.printf((info) => {
                const splat = info[Symbol.for("splat")];
                return (`${chalk_1.default.bold(gradient(["cyan", "rgb(0, 111, 150)", "rgb(0, 246,136)"])(" CloudBase Framework "))} ${info.level} ${info.message}` +
                    (splat ? ` ${splat.map(util_1.inspect).join(" ")} ` : ""));
            })),
            transports: [new winston_1.default.transports.Console()],
        });
    }
    return logger;
}
exports.default = getLogger;
